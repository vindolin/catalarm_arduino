<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<link href="favicon.ico" rel="icon" type="image/x-icon">

<style>


.switch {
    /*transform: scale(4.0);*/
    font-family: Arial, Helvetica, sans-serif;
    position: relative;
    display: inline-block;
    vertical-align: top;
    width: 396px;
    height: 89px;
    padding: 12px;
    background-color: white;
    border-radius: 72px;
    box-shadow: inset 0 -4px white, inset 0 4px 4px rgba(0, 0, 0, 0.05);
    cursor: pointer;
    background-image: linear-gradient(to bottom, #eeeeee, white 25px);
}

.switch-input {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
}

.switch-label {
    position: relative;
    display: block;
    height: inherit;
    font-size: 40px;
    text-transform: uppercase;
    background: #eceeef;
    border-radius: inherit;
    box-shadow: inset 0 4px 8px rgba(0, 0, 0, 0.12), inset 0 0 8px rgba(0, 0, 0, 0.15);
    transition: 0.15s ease-out;
    transition-property: opacity background;
}
.switch-label:before, .switch-label:after {
    position: absolute;
    top: 50%;
    margin-top: -.5em;
    line-height: 1;
    transition: inherit;
}
.switch-label:before {
    content: attr(data-off);
    left: 88px;
    color: #aaa;
    text-shadow: 0 4px rgba(255, 255, 255, 0.5);
}
.switch-label:after {
    content: attr(data-on);
    right: 88px;
    color: white;
    text-shadow: 0 4px rgba(0, 0, 0, 0.2);
    opacity: 0;
}
.switch-input:checked ~ .switch-label {
    background: #47a8d8;
    box-shadow: inset 0 4px 8px rgba(0, 0, 0, 0.15), inset 0 0 12px rgba(0, 0, 0, 0.2);
}
.switch-input:checked ~ .switch-label:before {
    opacity: 0;
}
.switch-input:checked ~ .switch-label:after {
    opacity: 1;
}

.switch-handle {
    position: absolute;
    top: 20px;
    left: 20px;
    width: 72px;
    height: 72px;
    background: white;
    border-radius: 40px;
    box-shadow: 4px 4px 20px rgba(0, 0, 0, 0.2);
    background-image: linear-gradient(to bottom, white 40%, #f0f0f0);
    transition: left 0.15s ease-out;
}
.switch-handle:before {
    /*display:none;*/
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    margin: -24px 0 0 -24px;
    width: 48px;
    height: 48px;
    background: #f9f9f9;
    border-radius: 24px;
    box-shadow: inset 0 4px rgba(0, 0, 0, 0.02);
    background-image: linear-gradient(to bottom, #eeeeee, white);
}
.switch-input:checked ~ .switch-handle {
    left: 328px;
    box-shadow: -4px 4px 20px rgba(0, 0, 0, 0.2);
}

.switch-buzzer > .switch-input:checked ~ .switch-label {
    background: #14BC1F;
}
.switch-im > .switch-input:checked ~ .switch-label {
    background: #BC1423;
}

.flex-container {
    padding-top:40px;
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-content: stretch;
    align-items: center;
}

.flex-item:not(:last-child) {
    margin-bottom: 18px;
}

html {
    background: #494949;
}

body {
    margin: 0;
    padding: 0;
    background: linear-gradient(
        to bottom,
        #00AEBEFF 0%,
        #00AEBEFF 95%,
        #007580FF 95%,
        #007580FF 100%
    );
    background-size: 100px 10px;
    background-repeat: repeat-x;
}

</style>

<script>
window.addEventListener('load', function() {
    // lots of things here only work with an ES6 capable browser (Firefox, Chrome)

    const local_ip = '192.168.178.126';  // used while developing this file and opening it from file:///home/me/project/index.htm
    const host = location.hostname == '' ? local_ip : location.host;

    var state;

    const checkbox_buzzer = document.querySelector('.switch-buzzer input[type=checkbox]');
    const checkbox_im = document.querySelector('.switch-im input[type=checkbox]');
    const evtSource = new EventSource(`http://${host}/events`);

    function get(url) {
        return new Promise((resolve, reject) => {
            const req = new XMLHttpRequest();
            req.open('GET', url);
            req.onload = () => req.status === 200 ? resolve(req.response) : reject(Error(req.statusText));
            req.onerror = (e) => reject(Error(`Network Error: ${e}`));
            req.send();
        });
    }

    function update_inputs() {
        checkbox_buzzer.checked = state.buzzer;
        checkbox_im.checked = state.im;
    }

    function set_state() {
        state.buzzer = checkbox_buzzer.checked;
        state.im = checkbox_im.checked;

        get(`http://${host}/set_state?buzzer=${state.buzzer}&im=${state.im}`)
    }

    function setup_events(checkbox) {
        for(var checkbox of document.getElementsByClassName('switch-input')) {
            checkbox.addEventListener('change', function() {
                set_state();
            });
        }
    }

    // flash the background when an alram is reported by an event
    function flash_alarm() {
        var old_background = document.documentElement.style.background;

        // make background red
        document.documentElement.style.background = 'red';

        // restore background
        setTimeout(function() {
            document.documentElement.style.background = old_background;
        }, 200);
    }

    // get the initial state
    get(`http://${host}/get_state`)
    .then((data) => {
        document.getElementById('container').style.display = 'flex';  // show container

        state = JSON.parse(data)

        checkbox_buzzer.checked = state['buzzer'];
        checkbox_im.checked = state['im'];

        setup_events();
    })
    .catch((err) => {
        console.error(err);
    });

    evtSource.addEventListener('state', (event) => {
        state = JSON.parse(event.data);
        update_inputs();
        console.log('state event:', state);
    }, false);

    evtSource.addEventListener('movement', (event) => {
        console.log(`movement: ${event.data}`);
        flash_alarm();
    }, false);

});

</script>

<title>Katzenalarm</title>
</head>

<body>
<div id="container" class="flex-container" style="display:none;">
    <div class="flex-item">
        <label class="switch switch-buzzer">
            <input type="checkbox" class="switch-input">
            <span class="switch-label" data-on="buzzer on" data-off="buzzer off"></span>
            <span class="switch-handle"></span>
        </label>
    </div>
    <div class="flex-item">
        <label class="switch switch-im">
            <input type="checkbox" class="switch-input">
            <span class="switch-label" data-on="message on" data-off="message off"></span>
            <span class="switch-handle"></span>
        </label>
    </div>
</div>
</body>
</html>
