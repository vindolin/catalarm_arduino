<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<link href="favicon.ico" rel="icon" type="image/x-icon">

<style>

input[type=checkbox] {
  position: absolute;
  opacity: 0;
}

.ckbx-style-8 {
  font-size: 24px;
}

.ckbx-style-8 input[type=checkbox] {
  position: absolute;
  opacity: 0;
}

.ckbx-style-8 label {
  width: 2em;
  height: 1em;
  position: relative;
  cursor: pointer;
  display: block;
}

.ckbx-style-8 label:before {
  content: '';
  position: absolute;
  width: 2em;
  height: 1em;
  left: 0.1em;
  transition: background 0.1s ease;
  background: #800040;
  border-radius: 250px;
  box-shadow: inset 0 2px 2px rgba(255,255,255, 0.2);
}

.ckbx-style-8 label:after {
  content: '';
  position: absolute;
  width: 1em;
  height: 1em;
  border-radius: 250px;
  left: 0;
  transition: all 0.2s ease;
  box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.4);
  background: #fcfff4;
  animation: switch-off .2s ease-out;
  z-index: 2;
}

.ckbx-style-8 input[type=checkbox]:checked + label:before {
  background: #007580;
  box-shadow: inset 0px 1px 1px rgba(255,255,255, 0.2);
}

.ckbx-style-8 input[type=checkbox]:checked + label:after {
  animation: switch-on .2s ease-out;
  left: 1.1em;
}

[class^=ckbx].ckbx-xxlarge {
  font-size: 20em;
}

.flex-container {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: center;
    align-content: stretch;
    align-items: flex-start;
    height:500px;
}

.flex-item:nth-child(1) {
    order: 0;
    flex: 0 1 auto;
    align-self: center;
}

html {
    background: #494949;
}

body {
    margin: 0;
    padding: 0;
    background: linear-gradient(
        to bottom,
        #00AEBEFF 0%,
        #00AEBEFF 95%,
        #007580FF 95%,
        #007580FF 100%
    );
    background-size: 100px 10px;
    background-repeat: repeat-x;
}

</style>

<script>
var local_ip = '192.168.178.126';  // used while developing this file and opening it from file:///home/me/project/index.htm
var host = location.hostname == '' ? local_ip : location.host;

function get(url) {
    return new Promise((resolve, reject) => {
        const req = new XMLHttpRequest();
        req.open('GET', url);
        req.onload = () => req.status === 200 ? resolve(req.response) : reject(Error(req.statusText));
        req.onerror = (e) => reject(Error(`Network Error: ${e}`));
        req.send();
    });
}

function setup_action(checkbox) {
    checkbox.addEventListener('change', function() {
        var action = this.checked ? 'enable' : 'disable';
        get(`http://${host}/${action}`)
    });
}

function flash_alarm() {
    var old_background = document.documentElement.style.background;
    document.documentElement.style.background = 'red';
    setTimeout(function() {
        document.documentElement.style.background = old_background;
    }, 100);
}

window.addEventListener('load', function() {
    var checkbox = document.getElementById('alarm_checkbox');

    get(`http://${host}/status`)
    .then((data) => {
        document.getElementById('container').style.display = 'flex';
        checkbox.checked = data == 'true';

        setup_action(checkbox);
    })
    .catch((err) => {
        console.error(err);
    });

    // var evtSource = new EventSource(`http://${host}/events`, {withCredentials: true});
    var evtSource = new EventSource(`http://${host}/events`);

    evtSource.addEventListener('status', (event) => {
        checkbox.checked = event.data == 'true';
        console.log(`Message: ${event.data}`);
    }, false);

    evtSource.addEventListener('movement', (event) => {
        console.log(`Message: ${event.data}`);
        flash_alarm();
    }, false);

});

</script>

<title>Katzenalarm</title>
</head>

<body>
<div id="container" class="flex-container" style="display:none;">
    <div class="flex-item">
        <div class="ckbx-style-8 ckbx-xxlarge">
            <input type="checkbox" id="alarm_checkbox" value="0" name="ckbx-style-1">
            <label for="alarm_checkbox"></label>
        </div>
    </div>
</div>
</body>
</html>
